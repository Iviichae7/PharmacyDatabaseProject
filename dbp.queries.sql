use Pharmacy_DB;

-- This query retrieves the date and time of each transaction by the staff name and the action
select al.transaction_id, al.date_time, al.action, s.Name as Staff_Name
from activity_log al
inner join Staff s on al.user_id = s.Staff_ID
where al.date_time >= date_sub(now(), interval 6 month)
order by al.date_time asc;

-- This query retrieves the names and emails of staff members
-- who made purchases on a specific date.
select distinct s.Name, s.Email
from Staff s
join Purchase p on s.Staff_ID = p.Staff_ID
where p.Date_Purchased = '2023-04-15';

-- This query retrieves the names and addresses of customers
-- who have purchased a specific medication.
select distinct c.Name, c.Address
from Customer c
join Purchase p on c.Customer_ID = p.Customer_ID
join Medication m on p.Medication_ID = m.Medication_ID
where m.Name = 'Metformin';

-- This query retrieves customer information and purchase dates
-- for customers who have purchased Ibuprofen within the past month.
select c.Name, c.Address, c.Phone_number, c.Email, p.Date_Purchased
from Customer c
join Purchase p on c.Customer_ID = p.Customer_ID
join Medication m on p.Medication_ID = m.Medication_ID
where m.Name = 'Ibuprofen' and p.Date_Purchased >= date_sub(now(), interval 1 month);

-- This query retrieves the names of doctors and the total number
-- of prescriptions they issued, sorted by the highest count first.
select p.Issued_Doctor, count(*) as Prescription_Count
from PRESCRIPTION p
group by p.Issued_Doctor
order by Prescription_Count desc;

-- This query retrieves the names of medications and 
-- the total count of prescriptions issued for each medication.
select m.Name, count(*) as Total_Prescriptions_Issued
from MEDICATION m
join PRESCRIPTION p on m.Medication_ID = p.Medication_ID
group by m.Medication_ID;

-- This query retrieves the names of staff members and their total revenue
-- generated from purchases made within the past month, sorted by the highest revenue first.
select st.Name, sum(p.Price) as Revenue
from STAFF st
join PURCHASE p on st.Staff_ID = p.Staff_ID
where p.Date_Purchased >= date_sub(now(), interval 1 month)
group by st.Staff_ID
order by Revenue desc;

-- This query retrieves the names of medications and 
-- calculates the total quantity sold and the total price for each medication, sorted by descending quantity and price.
select m.Name, sum(p.Quantity) as Total_Quantity, sum(p.Price) as Total_Price
from MEDICATION m
join PURCHASE p on m.Medication_ID = p.Medication_ID
group by m.Name
order by Total_Quantity desc, Total_Price desc;

-- This query retrieves the names of medications and their total revenue generated,
-- sorted by the highest revenue first.
select m.Name, sum(p.Price) as Total_Revenue
from MEDICATION m
join PURCHASE p on m.Medication_ID = p.Medication_ID
group by m.Name
order by Total_Revenue desc;

-- This query retrieves the company names of suppliers and 
-- calculates the total revenue generated by each supplier from medication purchases, sorted by the highest revenue first.
select s.Company_name, sum(p.Price * p.Quantity) as Total_Revenue_Generated
from SUPPLIER s
join MEDICATION m on s.Supplier_ID = m.Supplier_ID
join PURCHASE p on m.Medication_ID = p.Medication_ID
group by s.Supplier_ID
order by Total_Revenue_Generated desc;

-- This query retrieves the locations of suppliers and calculates
-- the total revenue generated by each location from medication purchases.
select s.Location, sum(p.Price * p.Quantity) as Total_Revenue_Generated
from PURCHASE p
join MEDICATION m on p.Medication_ID = m.Medication_ID
join SUPPLIER s on m.Supplier_ID = s.Supplier_ID
group by s.Location;

-- This query retrieves customer information and the number of times
-- they have purchased a specific medication.
select c.Name, c.Email, c.Phone_number, count(*) as Times_Purchased_Paracetamol
from CUSTOMER c
join PURCHASE p on c.Customer_ID = p.Customer_ID
join MEDICATION m on p.Medication_ID = m.Medication_ID
where m.Name = 'Paracetamol'
group by c.Customer_ID;
